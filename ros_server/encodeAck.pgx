<?xml version="1.0" encoding="utf-8" ?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2" >
  <Program name="encodeAck" access="public" >
    <Locals>
          <Local name="l_jCurrPose" type="jointRx" xsi:type="array" size="1" />
    </Locals>
    <Code><![CDATA[begin
  // Copyright (c) 2016, Ocado Technology - Robotics Research Team
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //     http://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.
  
  switch rosGenericMsg.header.nMsgType
    case 11
      
      // logMsg(toString("", l_jCurrPose))
      // call encPrefixHeader(rosJointMsg.prefix, rosJointMsg.header)      
        // l_jCurrPose=herej()
        // call encodeJState(l_jCurrPose)
        call encTrajPtAck()
      // encode and send ROS simple_message ID 10: joint state
       // call sendRosMsg(siTcpIpFbk, rosJointMsg.prefix, rosJointMsg.header, rosJointMsg.body, nOutConnFlag) 
      // endIf
    break
    case 14
      call encTrajPtFAck()
    break
    default
    break
  endSwitch
end]]></Code>
  </Program>
</Programs>
